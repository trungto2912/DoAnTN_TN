{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport RNStyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StyledComponent } from \"tailwindcss-react-native\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, []);\n  var handleLogin = function handleLogin() {};\n  return _jsx(StyledComponent, {\n    className: \"flex-1\",\n    component: SafeAreaView,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Username\",\n        value: username,\n        onChangeText: setUsername,\n        keyboardType: \"phone-pad\",\n        textContentType: \"telephoneNumber\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderWidth: 2,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: 'blue',\n    borderRadius: 4,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;\nglobalThis.tailwindcss_react_native_style = Object.assign(globalThis.tailwindcss_react_native_style || {}, RNStyleSheet.create({\n  \"container\": {\n    \"width\": \"100%\"\n  },\n  \"container.0\": {\n    \"maxWidth\": 640\n  },\n  \"container.1\": {\n    \"maxWidth\": 768\n  },\n  \"container.2\": {\n    \"maxWidth\": 1024\n  },\n  \"container.3\": {\n    \"maxWidth\": 1280\n  },\n  \"container.4\": {\n    \"maxWidth\": 1536\n  },\n  \"flex\": {\n    \"display\": \"flex\"\n  },\n  \"flex-1\": {\n    \"flexGrow\": 1,\n    \"flexShrink\": 1\n  }\n}));\nglobalThis.tailwindcss_react_native_media = Object.assign(globalThis.tailwindcss_react_native_media || {}, {\n  \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n});","map":{"version":3,"names":["React","useState","useLayoutEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","SafeAreaView","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","navigation","setOptions","headerShown","handleLogin","StyledComponent","className","component","children","style","styles","container","title","input","placeholder","value","onChangeText","keyboardType","textContentType","secureTextEntry","button","onPress","buttonText","create","flex","alignItems","justifyContent","fontSize","fontWeight","marginBottom","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","backgroundColor","paddingVertical","color","globalThis","tailwindcss_react_native_style","Object","assign","{}","RNStyleSheet","tailwindcss_react_native_media"],"sources":["D:/code/DaCN1/RestaurantApp/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet ,SafeAreaView} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native'\r\n\r\nconst LoginScreen = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const navigation = useNavigation();\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerShown: false,\r\n    });\r\n  }, []);\r\n\r\n  const handleLogin = () => {\r\n    // handle login logic here\r\n  };\r\n\r\n  return (\r\n\r\n    <SafeAreaView className=\"flex-1\">\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Login</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChangeText={setUsername}\r\n\r\n          keyboardType='phone-pad'\r\n          textContentType='telephoneNumber'\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n        />\r\n        <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    height: 40,\r\n    borderWidth: 2,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: 'blue',\r\n    borderRadius: 4,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}